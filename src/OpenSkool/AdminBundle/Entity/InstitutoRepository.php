<?php

namespace OpenSkool\AdminBundle\Entity;

use Yepsua\RADBundle\ORM\EntityRepository;

use OpenSkool\AdminBundle\Entity\Carrera;

/**
 * InstitutoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstitutoRepository extends EntityRepository
{
    const QUERY_ENTITY_NAME = 'instituto';
    const IMAGEN_JOIN_NAME  = 'instituto.imagen';
    
    protected function getLefJoinsAlias(){
      return array(self::IMAGEN_JOIN_NAME => ImagenRepository::ENTITY_NAME);
    }
    
    public function getInstitutos(){
        return $this->buildQuery()
                    ->getQuery()
                    ->getResult()
        ;
    }
    
    public function _findByCriteria($criteria = null){
        $query =  $this->buildQuery();
        if(is_array($criteria)){
            foreach ($criteria as $key => $value ){
                $query = $query->add('where', sprintf('%s.%s = :%s', self::ENTITY_NAME, $key, $key));
                $query = $query->setParameter($key, $value);
            }
        }
        return $query;
    }
    
    /**
     * 
     * @param type $criteria
     * @return Doctrine\ORM\AbstractQuery
     */
    public function findByCriteria($criteria = null){
        return $this->_findByCriteria($criteria)->getQuery()->getResult();
    }
    
    /**
     * 
     * @param type $criteria
     * @return Doctrine\ORM\AbstractQuery
     */
    public function findOneByCriteria($criteria = null){
        $result = null;
        $results = $this->_findByCriteria($criteria)->getQuery()->getResult();
        if(sizeof($results) >= 1){
            $result = $results[0];
        }
        return $result;
    }
    
    /**
     * 
     * @param \OpenSkool\AdminBundle\Entity\Carrera $carrera
     */
    public function synchronizeCarreras(Carrera $carrera){
        $institutos = $this->findAll();
        if($institutos !== null){
            $em = $this->getEntityManager();
            foreach($institutos as $instituto){
                $pensumEstudio = new Pensum();
                $pensumEstudio->setCarrera($carrera);
                $pensumEstudio->setInstituto($instituto);
                $em->persist($pensumEstudio);
            }
            $em->flush();
        }
    }
}
